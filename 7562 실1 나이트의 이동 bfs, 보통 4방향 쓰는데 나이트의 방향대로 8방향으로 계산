#7562
from collections import deque
import sys

input = sys.stdin.readline


def bfs(y, x):

  Queue = deque()
  Queue.append((y, x))

  while Queue:

    y, x = Queue.popleft()

    if y == finish_y and x == finish_x:
      break

    for i in range(8):
      ny = y + dy[i]
      nx = x + dx[i]

      if ny <= -1 or nx <= -1 or ny >= board_length or nx >= board_length : # ny >= board_length + 1 or nx >= board_length + 1 썻다가 처음에 틀림
        continue

      if graph[ny][nx] == 0:
        graph[ny][nx] = graph[y][x] + 1 # 최단거리 기록할때도 이 코드 씀
        Queue.append((ny, nx))


if __name__ == '__main__':

  global cnt

  cnt = 0
  test_case = int(input())
  dy = [-1, -2, -2, -1, 1, 2, 2, 1] # 나이트의 이동방향 y
  dx = [-2, -1, 1, 2, 2, 1, -1, -2] # 나이트의 이동방향 x

  for i in range(test_case):

    board_length = int(input())
    graph = [[0 for k in range(board_length)]
             for j in range(board_length)]

    start_y, start_x = map(int, input().split())
    finish_y, finish_x = map(int, input().split())

    bfs(start_y, start_x)

    print(graph[finish_y][finish_x])
